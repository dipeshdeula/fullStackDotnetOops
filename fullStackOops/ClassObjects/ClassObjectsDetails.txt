OOP in C# 

- It provides a clear modular structure of programs
- This makes easy to maintain the existing code
- codes can be reused without any redundancy
- It makes the code easier to understand and debug
- The main of OOP is to bind together the data and 
the functions that operate on them so that no other part of 
the code can access this data except that function.

Classes

- A class is a blueprint or a template for creating objects
- It defines the properties and behaviors of an object
- A class can have fields , properties, methods, and events
- A class can have access specifiers like public, private, protected, internal, protected internal
- They collectively define the data and behavior of an object
- In object creating, class gets its own set of data and behavior based on 
properties and methods defined in the class

syntax:
class ClassName
{
	// fields
	// properties
	// methods
	//Member variables
	//Member functions
}

Objects

- An object is a dynamically created instance of the class.
- It is created at run time so it can also be called a runtime entity
- All the members of the class can be accessed using the object.
- The object definition starts with the class name followed by the object name.
- Then the new operator is used to create the object.

syntax:
ClassName ObjectName = new ClassName();