Inheritance

- In C# , it is possible to inherit fields and methods from one class to another.
We group the "inheritance concept" into two categories: 
derived class (child) - the class that inherits from another class 
base class (parent)- the class being inherited from

- To inherit from a class, use the : symbol.
- A class derived from another class is called a derived class (child class).
- A class that is inherited from is called a base class (parent class).
- Inheritance is useful for code reusability: reuse fields and methods of an existing class when you create a new class.
- It allows you to create a new class that is built upon an existing class.
- The derived class (child) inherits all the features from the base class (parent) and can have additional features of its own.
- C# does not support multiple inheritance, where a class can inherit

Types of Inheritance
1) Single Inheritance => A class is allowed to inherit from only one class.
2) Multiple Inheritance => A class is allowed to inherit from more than one class.
3) Multilevel Inheritance => A class is derived from a class which is also derived from another class.
4) Hierarchical Inheritance => More than one derived class is created from a single base class.
5) Hybrid Inheritance => It is a combination of two or more types of inheritance.
